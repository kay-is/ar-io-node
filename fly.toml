# fly.toml app configuration file generated for ar-io-node on 2023-09-14T16:15:31Z
#
# See https://fly.io/docs/reference/configuration/ for information about how to use this file.
#

app = "ar-io-node"
primary_region = "ams"

[build]
  image = "ghcr.io/ar-io/ar-io-core:1409dad19dfe3f3eecdaa2345cc498081594bc70"
  
[env]
  ARNS_ROOT_HOST="arweave.fllstck.dev"
  SANDBOX_PROTOCOL="https"
  START_WRITERS="true"
  CHAIN_CACHE_TYPE="redis"
  ENABLE_FS_HEADER_CACHE_CLEANUP="true"
  LOG_LEVEL="notice"
  ANS104_UNBUNDLE_WORKERS="0"
  AR_IO_NODE_RELEASE="17"
  TRUSTED_GATEWAY_URL="https://arweave.net"
  TRUSTED_ARNS_GATEWAY_URL="https://__NAME__.arweave.net"
  ARNS_RESOLVER_PRIORITY_ORDER="on-demand,gateway"
  ARNS_CACHE_TTL_SECONDS="3600"
  ARNS_CACHE_MAX_KEYS="10000"
  ENABLE_MEMPOOL_WATCHER="false"
  CONTIGUOUS_DATA_CACHE_CLEANUP_THRESHOLD="86400" # older than a day
#  REDIS_CACHE_URL=*** // Using Upstash Redis via Fly.io
#  ADMIN_API_KEY=***
#  AR_IO_WALLET=***


[mounts]
  source="app_data"
  destination="/app/data"

[http_service]
  internal_port = 4000
  force_https = false
  auto_stop_machines = "stop"
  auto_start_machines = true
  min_machines_running = 1
  processes = ["app"]

[checks]
  [checks.ario_healthcheck]
    grace_period = "30s"
    interval = "15s"
    method = "get"
    path = "/ar-io/healthcheck"
    port = 4000
    timeout = "10s"
    type = "http"
    restart_limit = 4
    [checks.ario_healthcheck.headers]
      Content-Type = "application/json"